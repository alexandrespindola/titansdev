import{p as I,c as b}from"./DudneCL3.js";function k({uploadSignature:t,...r},e){const o=typeof t=="function",{cloudName:a,apiKey:n}=(e==null?void 0:e.cloud)||{};if(!a)throw new Error("A Cloudinary Cloud name is required, please make sure your environment variable is set and configured in your environment.");if(o&&!n)throw new Error("A Cloudinary API Key is required for signed requests, please make sure your environment variable is set and configured in your environment.");if(!o&&!r.uploadPreset)throw new Error("A Cloudinary Upload Preset is required for unsigned uploads. Please specify an uploadPreset or configure signed uploads.");const s={cloudName:a,apiKey:n,...r};return o&&(s.uploadSignature=t),s}var P={abort:"onAbort","batch-cancelled":"onBatchCancelled",close:"onClose","display-changed":"onDisplayChanged",publicid:"onPublicId","queues-end":"onQueuesEnd","queues-start":"onQueuesStart",retry:"onRetry","show-completed":"onShowCompleted","source-changed":"onSourceChanged",success:"onSuccess",tags:"onTags","upload-added":"onUploadAdded"};function q(t){return function(e,o){e&&typeof t.onError=="function"&&t.onError(e,o),typeof t.onResult=="function"&&t.onResult(o);const a=typeof(o==null?void 0:o.event)=="string"&&P[o.event];if(typeof a=="string"&&typeof t[a]=="function"){const n=t[a];n(o)}}}function S({signatureEndpoint:t,fetch:r}){return function(o,a){if(typeof t>"u")throw Error("Failed to generate signature: signatureEndpoint property undefined.");if(typeof r>"u")throw Error("Failed to generate signature: fetch property undefined.");r(t,{method:"POST",body:JSON.stringify({paramsToSign:a}),headers:{"Content-Type":"application/json"}}).then(n=>n.json()).then(n=>{o(n.signature)}).catch(n=>{o(null,n)})}}function T(t,r){const{autoplay:e,controls:o=!0,language:a,languages:n,logo:s=!0,loop:C=!1,muted:w=!1,poster:l,src:f,transformation:p,quality:v="auto",...E}=t,{cloudName:y}=(r==null?void 0:r.cloud)||{},{secureDistribution:O,privateCdn:U}=(r==null?void 0:r.url)||{};if(!y)throw new Error("A Cloudinary Cloud name is required, please make sure your environment variable is set and configured in your environment.");let d=f||"";if(d.startsWith("http"))try{const u=I(f);typeof(u==null?void 0:u.publicId)=="string"&&(d=u==null?void 0:u.publicId)}catch{}if(!d)throw new Error("Video Player requires a src, please make sure to configure your src as a public ID or Cloudinary URL.");const g=Array.isArray(p)?p:[p];g.unshift({quality:v});let c={};typeof s=="boolean"?c.showLogo=s:typeof s=="object"&&(c={...c,showLogo:!0,logoImageUrl:s.imageUrl,logoOnclickUrl:s.onClickUrl});let h=!1,m;(typeof e=="boolean"||e==="true"||e==="false")&&(h=e),typeof e=="string"&&e!=="true"&&e!=="false"&&(m=e);const i={cloud_name:y,privateCdn:U,secureDistribution:O,autoplayMode:m,autoplay:h,controls:o,language:a,languages:n,loop:C,muted:w,publicId:d,transformation:g,...c,...E};return i.width&&i.height&&!i.aspectRatio&&(i.aspectRatio=`${i.width}:${i.height}`),typeof l=="string"?i.posterOptions={publicId:l}:typeof l=="object"&&(typeof l.src!="string"?i.posterOptions={publicId:b({options:{...l,src:d,assetType:"video",format:"auto:image"},config:r})}:i.posterOptions={publicId:b({options:l,config:r})}),i}export{P as U,S as a,q as b,T as c,k as g};
